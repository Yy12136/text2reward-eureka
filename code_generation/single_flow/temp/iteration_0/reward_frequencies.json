{
    "reward = 0.0": 0.143,
    "reward += max(0, 1.0 - distance_to_cube) * 0.5": 0.014,
    "reward += 1.0": 0.043,
    "reward += max(0, 1.0 - height_diff) * 0.5": 0.014,
    "reward += action_penalty": 0.071,
    "reach_reward = -distance_to_cube  # Penalize distance to cube": 0.029,
    "reward += reach_reward * 0.5": 0.043,
    "reward += 1.0  # Reward for successful grasp": 0.043,
    "lift_reward = -np.abs(height_diff)  # Penalize deviation from target height": 0.014,
    "reward += lift_reward * 1.0": 0.043,
    "reward += 1.0  # Reward for keeping the cube static": 0.014,
    "reward += action_penalty * 0.1": 0.029,
    "reach_reward = -distance_to_cube  # Encourage the robot to get closer to the cube": 0.014,
    "lift_reward = -height_error  # Encourage lifting the cube to the desired height": 0.014,
    "reward += 0.5  # Reward for keeping the cube static while lifted": 0.014,
    "reward += max(0, 1.0 - distance_to_cube)": 0.014,
    "reward += max(0, 1.0 - height_diff)": 0.014,
    "reward += 0.5": 0.029,
    "reach_reward = -dist_to_cube * 10.0  # Scale to make it significant": 0.014,
    "reward += reach_reward": 0.043,
    "grasp_reward = 10.0": 0.014,
    "reward += grasp_reward": 0.014,
    "lift_reward = 20.0  # Large reward for reaching the target height": 0.014,
    "lift_reward = -height_diff * 10.0  # Reward for reducing the height difference": 0.014,
    "reward += lift_reward": 0.043,
    "reward += static_penalty": 0.014,
    "reach_reward = 1.0 - np.tanh(5.0 * distance_to_cube)": 0.014,
    "lift_reward = 1.0 - np.tanh(10.0 * max(0.0, height_diff))": 0.014,
    "reward += qvel_penalty": 0.014,
    "reach_reward = 1.0 / (1.0 + dist_to_cube)": 0.014,
    "lift_reward = 1.0 / (1.0 + height_diff)": 0.014,
    "reward += vel_penalty": 0.014,
    "reward += pos_penalty": 0.014,
    "lift_reward = -height_diff  # Penalize deviation from target height": 0.014,
    "reward += 0.5  # Reward for keeping the cube static": 0.014,
    "reward += 1.0 / (1.0 + distance_to_cube)  # Inverse distance reward": 0.014,
    "reward += 1.0  # Bonus for successful grasp": 0.014,
    "reward += 1.0 / (1.0 + height_difference)  # Inverse height difference reward": 0.014,
    "reward += 0.5  # Bonus for keeping the cube static": 0.014,
    "reward += 1.0 / (1.0 + distance_to_cube)": 0.014,
    "reward += 1.0 / (1.0 + height_diff)": 0.014,
    "reward += 10.0  # Large reward for successfully completing the task": 0.014
}